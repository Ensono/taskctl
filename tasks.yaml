output: cockpit

pipelines:
  build:
    - name: Build "darwin"
      task: build
      env:
        GOOS: darwin
        BIN_OUT: bin/taskctl_darwin_amd64
    - name: Build "linux"
      task: build
      env:
        GOOS: linux
        BIN_OUT: bin/taskctl_linux_amd64
    - name: Build "windows"
      task: build
      env:
        GOOS: windows
        BIN_OUT: bin/taskctl_windows_amd64.exe

  fixcs:
    - task: goimports
      dir: "{{.Root}}"
    - task: gofmt
      dir: "{{.Root}}"
      depends_on: goimports

  prepare:
    - task: tidy
    - task: test
    - task: goimports
      depends_on: test
    - task: gofmt
      depends_on: goimports
    - pipeline: lints

  lints:
    - task: golint
    - task: govet
      depends_on: golint

tasks:
  test:
    command:
      - go test ./... -v -mod=readonly

  build:
    command:
      - GOOS=${GOOS} GOARCH=amd64 go build -o ${BIN_OUT} ./cmd/taskctl
    variations:
      - GOOS: linux
        BIN_OUT: bin/taskctl_linux_amd64
      - GOOS: darwin
        BIN_OUT: bin/taskctl_darwin_amd64
      - GOOS: windows
        BIN_OUT: bin/taskctl_windows_amd64.exe

  golint:
    command:
      - golint  $(go list ./... | grep -v /vendor/)

  govet:
    command:
      - go vet $(go list ./... | grep -v /vendor/)

  goimports:
    command:
      - goimports -v -local github.com/taskctl/taskctl -w -format-only $(ls -d internal/**/*.go)
      - goimports -v -local github.com/taskctl/taskctl -w -format-only $(ls -d pkg/**/*.go)
      - goimports -v -local github.com/taskctl/taskctl -w -format-only $(ls -d cmd/**/*.go)

  goreleaser:
    command:
      - goreleaser --debug --rm-dist

  gofmt:
    command:
      - go fmt -x ./...
      - gofmt -s -w cmd/**/*.go
      - gofmt -s -w internal/**/*.go
      - gofmt -s -w pkg/**/*.go

  echo:
    command: echo {{ .Task.Name }}
  tidy:
    command:
      - go mod tidy

