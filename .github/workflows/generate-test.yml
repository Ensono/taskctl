name: eks:stacks
"on":
  push:
    branches:
    - master
    - main
  pull_request:
    branches:
    - master
    - main
env:
  REGION: eu-west-1

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
    - name: lint:ci
      id: lint__ci
      run: |
        echo "lint stuff"
  InfraDev:
    name: InfraDev
    needs:
    - lint
    runs-on: ubuntu-latest
    steps:
    - name: install-taskctl
      id: install-taskctl
      run: |
        echo "installing taskctl"
    - name: infra:init
      id: infra__init
      run: |
        echo "tf init"
        env | grep TF_
      env:
        TF_DIR: foo/bar
    - name: infra:apply
      id: infra__apply
      run: |
        echo "tf apply" && env | grep TF_
      env:
        TF_DIR: foo/bar
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_DEFAULT_REGION: ${{ env.REGION }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ENV_NAME: nonprod
      SOME_TOKEN_FOR_APP1: GHA_SECRET://foo/bar/secret
      TF_BACKEND_ARGS: region=${AWS_TF_STATE_REGION},access_key=${{secrets.AWS_ACCESS_KEY_ID}},secret_key=${{secrets.AWS_SECRET_ACCESS_KEY}},bucket=${{secrets.AWS_TF_STATE_BUCKET}},key=${{env.AWS_TF_PRE_INFRA_STATE_KEY}},dynamodb_table=${{secrets.AWS_TF_STATE_DYNAMOTABLE}},encrypt=true
      TF_FILE_LOCATION: somefile/foo.tf
      TF_VAR_container_registry_pull_push_user: AWSSECRETS://foo/bar/secret
      TF_VAR_dns_create_hostedzone: "0"
      TF_VAR_dns_create_hostedzone_parent_link: "0"
      TF_VAR_dns_hostedzone_name: nonprod
      TF_VAR_dns_parent_hostedzone_name: foo.com
      TF_VAR_k8s_role_file_map: '["../../k8s/users/nonprod-admin-users.json", "../../k8s/users/nonprod-developer-users.json"]'
      TF_VAR_name_environment: nonprod
  InfraProd:
    name: InfraProd
    needs:
    - lint
    runs-on: ubuntu-latest
    steps:
    - name: install-taskctl
      id: install-taskctl
      run: |
        echo "installing taskctl"
    - name: infra:init
      id: infra__init
      run: |
        echo "tf init"
        env | grep TF_
      env:
        TF_DIR: foo/bar
    - name: infra:apply
      id: infra__apply
      run: |
        echo "tf apply" && env | grep TF_
      env:
        TF_DIR: foo/bar
    env:
      ENV: prod
