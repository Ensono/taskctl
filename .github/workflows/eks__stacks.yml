name: eks:stacks
"on":
  push:
    branches:
    - main
    - master
  pull_request:
    branches:
    - main
    - master
jobs:
  lint:
    name: lint
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Install taskctl
      id: install-taskctl
      run: |-
        rm -rf /tmp/taskctl-linux-amd64-1.7.5
        wget https://github.com/Ensono/taskctl/releases/download/1.7.5/taskctl-linux-amd64 -O /tmp/taskctl-linux-amd64-1.7.5
        cp /tmp/taskctl-linux-amd64-1.7.5 /usr/local/bin/taskctl
        chmod u+x /usr/local/bin/taskctl
      shell: bash
  InfraDev:
    name: InfraDev
    needs:
    - lint
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Install taskctl
      id: install-taskctl
      run: |-
        rm -rf /tmp/taskctl-linux-amd64-1.7.5
        wget https://github.com/Ensono/taskctl/releases/download/1.7.5/taskctl-linux-amd64 -O /tmp/taskctl-linux-amd64-1.7.5
        cp /tmp/taskctl-linux-amd64-1.7.5 /usr/local/bin/taskctl
        chmod u+x /usr/local/bin/taskctl
      shell: bash
    - name: infra:init
      id: infra__init
      run: taskctl run infra:init
      env:
        BOOL: "1"
        TF_DIR: foo/bar
    - name: infra:apply
      id: infra__apply
      run: taskctl run infra:apply
      env:
        TF_DIR: foo/bar
    if: github.ref != 'refs/heads/main'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_DEFAULT_REGION: ${REGION}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ENV_NAME: nonprod
      SOME_TOKEN_FOR_APP1: GHA_SECRET://foo/bar/secret
      TF_BACKEND_ARGS: region=${AWS_TF_STATE_REGION},access_key=${{secrets.AWS_ACCESS_KEY_ID}},secret_key=${{secrets.AWS_SECRET_ACCESS_KEY}},bucket=${{secrets.AWS_TF_STATE_BUCKET}},key=${AWS_TF_PRE_INFRA_STATE_KEY},dynamodb_table=${{secrets.AWS_TF_STATE_DYNAMOTABLE}},encrypt=true
      TF_FILE_LOCATION: somefile/foo.tf
      TF_VAR_container_registry_pull_push_user: AWSSECRETS://foo/bar/secret
      TF_VAR_dns_create_hostedzone: "0"
      TF_VAR_dns_create_hostedzone_parent_link: "0"
      TF_VAR_dns_hostedzone_name: nonprod
      TF_VAR_dns_parent_hostedzone_name: foo.com
      TF_VAR_k8s_role_file_map: '["../../k8s/users/nonprod-admin-users.json", "../../k8s/users/nonprod-developer-users.json"]'
      TF_VAR_name_environment: nonprod
    environment: nonprod
  InfraProd:
    name: InfraProd
    needs:
    - lint
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Install taskctl
      id: install-taskctl
      run: |-
        rm -rf /tmp/taskctl-linux-amd64-1.7.5
        wget https://github.com/Ensono/taskctl/releases/download/1.7.5/taskctl-linux-amd64 -O /tmp/taskctl-linux-amd64-1.7.5
        cp /tmp/taskctl-linux-amd64-1.7.5 /usr/local/bin/taskctl
        chmod u+x /usr/local/bin/taskctl
      shell: bash
    - name: infra:init
      id: infra__init
      run: taskctl run infra:init
      env:
        BOOL: "1"
        TF_DIR: foo/bar
    - name: infra:apply
      id: infra__apply
      run: taskctl run infra:apply
      env:
        TF_DIR: foo/bar
    if: github.ref == 'refs/heads/main'
    env:
      ENV: prod
    environment: prod
env:
  CERT_MANAGER_ENABLED: true
  CERT_MANAGER_NAMESPACE: cert-manager
  CERT_MANAGER_SERVICE_ACCOUNT_NAME: cert-manager
  CLOUD_PROVIDER: aws
  CLUSTER_ENABLE_CONTAINER_INSIGHTS: true
  CLUSTER_ENDPOINT_PRIVATE_ACCESS: false
  CLUSTER_ENDPOINT_PUBLIC_ACCESS: true
  CLUSTER_VERSION: "1.30"
  CONTAINER_REGISTRY_PULL_PUSH_USER: true
  DNS_CREATE_HOSTEDZONE: true
  DNS_CREATE_HOSTEDZONE_PARENT_LINK: true
  EKS_MAXIMUM_NODES: "3"
  EKS_NODE_SIZE: t3.small
  EXTERNAL_DNS_ENABLED: true
  EXTERNAL_DNS_NAMESPACE: external-dns
  EXTERNAL_DNS_SERVICE_ACCOUNT_NAME: external-dns
  FIREWALL_ALLOWED_DOMAIN_TARGETS: '[]'
  INGRESS_NGINX_ENABLED: true
  INGRESS_NGINX_NAMESPACE: ingress-nginx
  INGRESS_NGINX_REPLICA_COUNT: 3
  INGRESS_NGINX_SERVICE_ACCOUNT_NAME: ingress-nginx
  NON_PROD_CLUSTER_SINGLE_AZ: true
  NON_PROD_EKS_DESIRED_NODES: "2"
  NON_PROD_EKS_MINIMUM_NODES: "2"
  NON_PROD_FIREWALL_CREATE_TLS_ALERT_RULE: false
  NON_PROD_FIREWALL_ENABLED: false
  NON_PROD_VPC_NAT_GATEWAY_PER_AZ: false
  PROD_CLUSTER_SINGLE_AZ: false
  PROD_EKS_DESIRED_NODES: "1"
  PROD_EKS_MINIMUM_NODES: "1"
  PROD_FIREWALL_CREATE_TLS_ALERT_RULE: true
  PROD_FIREWALL_ENABLED: true
  PROD_VPC_NAT_GATEWAY_PER_AZ: true
  TASKCTL_CONFIG_FILE: cmd/taskctl/testdata/generate.yml
  TF_INFRA_FILE_LOCATION: deploy/aws/infra
  TF_PRE_INFRA_FILE_LOCATION: deploy/aws/pre-infra
  TaskctlVersion: 1.7.2
  VPC_CIDR: 10.0.0.0/16
